-- 00_create_schema.sql
-- 実行: ADW の対象スキーマで実行してください。

-- --- テーブル: DIM_DATE / DIM_TIME / DIM_STORE / DIM_PRODUCT / DIM_CUSTOMER / DIM_EVENT / FACT_SALES
-- Drop（既存あれば削除） - 実行前に必要に応じてコメント解除
BEGIN
  FOR t IN (SELECT table_name FROM user_tables WHERE table_name IN
            ('FACT_SALES','DIM_EVENT','DIM_CUSTOMER','DIM_PRODUCT','DIM_STORE','DIM_TIME','DIM_DATE'))
  LOOP
    EXECUTE IMMEDIATE 'DROP TABLE '||t.table_name||' CASCADE CONSTRAINTS';
  END LOOP;
EXCEPTION WHEN OTHERS THEN NULL;
END;
/

-- Drop sequences if exist
BEGIN
  FOR s IN (SELECT sequence_name FROM user_sequences WHERE sequence_name IN
            ('SEQ_DATE','SEQ_TIME','SEQ_STORE','SEQ_PRODUCT','SEQ_CUSTOMER','SEQ_EVENT','SEQ_SALES'))
  LOOP
    EXECUTE IMMEDIATE 'DROP SEQUENCE '||s.sequence_name;
  END LOOP;
EXCEPTION WHEN OTHERS THEN NULL;
END;
/

-- CREATE DATE DIM
CREATE TABLE DIM_DATE (
  DATE_ID        NUMBER PRIMARY KEY,
  CALENDAR_DATE  DATE UNIQUE,
  YYYY           NUMBER(4),
  QTR            NUMBER(1),
  MM             NUMBER(2),
  DD             NUMBER(2),
  WEEKDAY        NUMBER(1), -- 1=Sunday .. 7=Saturday (Oracle: to_char(...,'D') depends on NLS, keep numeric weekday)
  IS_HOLIDAY     CHAR(1) DEFAULT 'N',
  MAX_TEMP       NUMBER(5,2),
  MIN_TEMP       NUMBER(5,2),
  WEATHER        VARCHAR2(30)
);

-- CREATE TIME DIM (日粒度、DATE_ID に紐づく)
CREATE TABLE DIM_TIME (
  TIME_ID NUMBER PRIMARY KEY,
  DATE_ID NUMBER REFERENCES DIM_DATE(DATE_ID),
  YYYY     NUMBER(4),
  QTR      NUMBER(1),
  MM       NUMBER(2),
  DD       NUMBER(2)
);

-- STORE DIM
CREATE TABLE DIM_STORE (
  STORE_ID      NUMBER PRIMARY KEY,
  STORE_CODE    VARCHAR2(50) UNIQUE,
  STORE_NAME    VARCHAR2(100),
  LOCATION_TYPE VARCHAR2(30), -- 駅前, 商店街, ロードサイド, ショッピングモール
  LOCATION_RANK NUMBER, -- ランク数値（高いほど良い）
  LATITUDE      NUMBER(9,6),
  LONGITUDE     NUMBER(9,6),
  STORE_AREA    NUMBER(7,2), -- m2
  STAFF_COUNT   NUMBER,
  OPEN_DATE     DATE
);

-- PRODUCT DIM
CREATE TABLE DIM_PRODUCT (
  PRODUCT_ID     NUMBER PRIMARY KEY,
  SKU            VARCHAR2(50) UNIQUE,
  CATEGORY       VARCHAR2(50),
  SUBCATEGORY    VARCHAR2(50),
  PRODUCT_NAME   VARCHAR2(200),
  PRICE          NUMBER(10,2),
  POPULARITY     NUMBER -- 1..100 (高いほど売れやすい)
);

-- CUSTOMER DIM
CREATE TABLE DIM_CUSTOMER (
  CUSTOMER_ID   NUMBER PRIMARY KEY,
  CUSTOMER_NO   VARCHAR2(50) UNIQUE,
  GENDER        VARCHAR2(10),
  BIRTH_YEAR    NUMBER(4),
  AGE           NUMBER,
  EMAIL         VARCHAR2(200),
  PREFECTURE    VARCHAR2(50),
  CITY          VARCHAR2(100),
  POSTCODE      VARCHAR2(20),
  ACTIVE_FLAG   CHAR(1) DEFAULT 'Y'
);

-- EVENT DIM
CREATE TABLE DIM_EVENT (
  EVENT_ID     NUMBER PRIMARY KEY,
  EVENT_NAME   VARCHAR2(200),
  EVENT_TYPE   VARCHAR2(50), -- 地域イベント, 競合関連, 環境変化
  START_DATE   DATE,
  END_DATE     DATE,
  DESCRIPTION  VARCHAR2(4000)
);

-- FACT TABLE (売上)
CREATE TABLE FACT_SALES (
  SALES_ID        NUMBER PRIMARY KEY,
  SALES_DATE_ID   NUMBER REFERENCES DIM_DATE(DATE_ID),
  SALES_TIME_ID   NUMBER REFERENCES DIM_TIME(TIME_ID),
  STORE_ID        NUMBER REFERENCES DIM_STORE(STORE_ID),
  PRODUCT_ID      NUMBER REFERENCES DIM_PRODUCT(PRODUCT_ID),
  CUSTOMER_ID     NUMBER, -- NULL 可能 (会員以外)
  EVENT_ID        NUMBER, -- NULL 可能
  QUANTITY        NUMBER,
  AMOUNT          NUMBER(12,2),
  CUSTOMER_COUNT  NUMBER DEFAULT 1,
  CREATED_AT      TIMESTAMP DEFAULT SYSTIMESTAMP
);

-- シーケンス
CREATE SEQUENCE SEQ_DATE START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_TIME START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_STORE START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_PRODUCT START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_CUSTOMER START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_EVENT START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_SALES START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

-- 推奨インデックス（fact 用のよく使う列）
CREATE INDEX IDX_FACT_SALES_DATE ON FACT_SALES(SALES_DATE_ID);
CREATE INDEX IDX_FACT_SALES_STORE ON FACT_SALES(STORE_ID);
CREATE INDEX IDX_FACT_SALES_PRODUCT ON FACT_SALES(PRODUCT_ID);
CREATE INDEX IDX_FACT_SALES_CUSTOMER ON FACT_SALES(CUSTOMER_ID);

COMMIT;
